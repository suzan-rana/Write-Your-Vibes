import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Button from "~/components/ui/Button";
import Navbar from "~/components/ui/Navbar";
import { NextPageWithLayout } from "./_app";
import Layout from "~/components/ui/Layout";
import UserAvatar from "~/components/ui/UserAvatar";
import MessageCard from "~/components/ui/Chat/ChatCard";
import Input from "~/components/ui/Input";
import { CategoryEnum } from "~/utils/category";
import { api } from "~/utils/api";
import Card from "~/components/ui/Card";

const Home: NextPageWithLayout = () => {
  const { status, data } = useSession();

  if (status !== "authenticated") {
    return <Link href={"/auth/login"}>Login with email and password</Link>;
  }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mb-12 md:w-[85%] text-left">
        <PosByCategory category_name="SCIENCE_AND_TECH" />
        <PosByCategory category_name="ANIME" />

        <PosByCategory category_name="SCIENCE_AND_TECH" />

        <PosByCategory category_name="SCIENCE_AND_TECH" />

        <PosByCategory category_name="SCIENCE_AND_TECH" />
      </main>
    </>
  );
};

const PosByCategory = ({
  category_name,
}: {
  category_name: keyof typeof CategoryEnum;
}) => {
  const { data, isLoading, isFetching } = api.blog.getBlogsByCategory.useQuery({
    category_name,
  });
  if (isLoading || isFetching) {
    return <p className="py-5 text-gray-400">Loading...</p>;
  }
  return (
    <>
      {data?.data.length !== 0 && (
        <article className="my-16">
          <h1 className="pb-6 text-xl font-bold md:text-2xl">
            Look what <span className="text-red-400">{category_name}</span> has
            to offer!
          </h1>
          <section className="flex gap-8  flex-wrap">
            {data?.data.map((post) => (
              <Link key={post.id} className="grow" href={`/blog/${post.id}`}>
                <Card
                  count={post._count}
                  createdAt={post.createdAt}
                  subtitle={post.subtitle}
                  title={post.title}
                  imageSrc={post.image}
                />
              </Link>
            ))}
          </section>
        </article>
      )}
    </>
  );
};

export default Home;
Home.getLayout = (page: React.ReactElement) => {
  return <Layout>{page}</Layout>;
};

interface MessageBoxProps {
  left: boolean;
  content: string;
}
